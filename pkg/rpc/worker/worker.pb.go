// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: api/worker.proto

package worker

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ShardEnvelope struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShardId       string                 `protobuf:"bytes,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	KeyId         string                 `protobuf:"bytes,2,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	Nonce         []byte                 `protobuf:"bytes,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Cipher        []byte                 `protobuf:"bytes,4,opt,name=cipher,proto3" json:"cipher,omitempty"`
	Mac           []byte                 `protobuf:"bytes,5,opt,name=mac,proto3" json:"mac,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShardEnvelope) Reset() {
	*x = ShardEnvelope{}
	mi := &file_api_worker_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShardEnvelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardEnvelope) ProtoMessage() {}

func (x *ShardEnvelope) ProtoReflect() protoreflect.Message {
	mi := &file_api_worker_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardEnvelope.ProtoReflect.Descriptor instead.
func (*ShardEnvelope) Descriptor() ([]byte, []int) {
	return file_api_worker_proto_rawDescGZIP(), []int{0}
}

func (x *ShardEnvelope) GetShardId() string {
	if x != nil {
		return x.ShardId
	}
	return ""
}

func (x *ShardEnvelope) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *ShardEnvelope) GetNonce() []byte {
	if x != nil {
		return x.Nonce
	}
	return nil
}

func (x *ShardEnvelope) GetCipher() []byte {
	if x != nil {
		return x.Cipher
	}
	return nil
}

func (x *ShardEnvelope) GetMac() []byte {
	if x != nil {
		return x.Mac
	}
	return nil
}

type Ack struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ack) Reset() {
	*x = Ack{}
	mi := &file_api_worker_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ack) ProtoMessage() {}

func (x *Ack) ProtoReflect() protoreflect.Message {
	mi := &file_api_worker_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ack.ProtoReflect.Descriptor instead.
func (*Ack) Descriptor() ([]byte, []int) {
	return file_api_worker_proto_rawDescGZIP(), []int{1}
}

func (x *Ack) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type ShardRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShardId       string                 `protobuf:"bytes,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShardRequest) Reset() {
	*x = ShardRequest{}
	mi := &file_api_worker_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardRequest) ProtoMessage() {}

func (x *ShardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_worker_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardRequest.ProtoReflect.Descriptor instead.
func (*ShardRequest) Descriptor() ([]byte, []int) {
	return file_api_worker_proto_rawDescGZIP(), []int{2}
}

func (x *ShardRequest) GetShardId() string {
	if x != nil {
		return x.ShardId
	}
	return ""
}

var File_api_worker_proto protoreflect.FileDescriptor

const file_api_worker_proto_rawDesc = "" +
	"\n" +
	"\x10api/worker.proto\x12\x03rpc\"\x81\x01\n" +
	"\rShardEnvelope\x12\x19\n" +
	"\bshard_id\x18\x01 \x01(\tR\ashardId\x12\x15\n" +
	"\x06key_id\x18\x02 \x01(\tR\x05keyId\x12\x14\n" +
	"\x05nonce\x18\x03 \x01(\fR\x05nonce\x12\x16\n" +
	"\x06cipher\x18\x04 \x01(\fR\x06cipher\x12\x10\n" +
	"\x03mac\x18\x05 \x01(\fR\x03mac\"\x15\n" +
	"\x03Ack\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\")\n" +
	"\fShardRequest\x12\x19\n" +
	"\bshard_id\x18\x01 \x01(\tR\ashardId2i\n" +
	"\x06Worker\x12*\n" +
	"\n" +
	"StoreShard\x12\x12.rpc.ShardEnvelope\x1a\b.rpc.Ack\x123\n" +
	"\n" +
	"FetchShard\x12\x11.rpc.ShardRequest\x1a\x12.rpc.ShardEnvelopeB\x10Z\x0epkg/rpc/workerb\x06proto3"

var (
	file_api_worker_proto_rawDescOnce sync.Once
	file_api_worker_proto_rawDescData []byte
)

func file_api_worker_proto_rawDescGZIP() []byte {
	file_api_worker_proto_rawDescOnce.Do(func() {
		file_api_worker_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_worker_proto_rawDesc), len(file_api_worker_proto_rawDesc)))
	})
	return file_api_worker_proto_rawDescData
}

var file_api_worker_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_api_worker_proto_goTypes = []any{
	(*ShardEnvelope)(nil), // 0: rpc.ShardEnvelope
	(*Ack)(nil),           // 1: rpc.Ack
	(*ShardRequest)(nil),  // 2: rpc.ShardRequest
}
var file_api_worker_proto_depIdxs = []int32{
	0, // 0: rpc.Worker.StoreShard:input_type -> rpc.ShardEnvelope
	2, // 1: rpc.Worker.FetchShard:input_type -> rpc.ShardRequest
	1, // 2: rpc.Worker.StoreShard:output_type -> rpc.Ack
	0, // 3: rpc.Worker.FetchShard:output_type -> rpc.ShardEnvelope
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_api_worker_proto_init() }
func file_api_worker_proto_init() {
	if File_api_worker_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_worker_proto_rawDesc), len(file_api_worker_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_worker_proto_goTypes,
		DependencyIndexes: file_api_worker_proto_depIdxs,
		MessageInfos:      file_api_worker_proto_msgTypes,
	}.Build()
	File_api_worker_proto = out.File
	file_api_worker_proto_goTypes = nil
	file_api_worker_proto_depIdxs = nil
}
